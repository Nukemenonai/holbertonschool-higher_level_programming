TEST: 2-matrix_divided.py
==============================
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3],[4, 5, 6]]

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided([[1,2][3,'27']]))
Traceback (most recent call last):
	  ...
TypeError: list indices must be integers, not tuple
>>> print(matrix_divided([[1,2],[3,'27']]))
Traceback (most recent call last):
	  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> print(matrix_divided([[1,2],[3,'27']], 4))
Traceback (most recent call last):
	  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided([[1,2],[3,9]], 0))
Traceback (most recent call last):
	  ...
ZeroDivisionError: division by zero
>>> print(matrix_divided([[1,2],[]], 2))
Traceback (most recent call last):
	  ...
TypeError: Each row of the matrix must have the same size
>>> print(matrix_divided([[],[]], 3))
Traceback (most recent call last):
	  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided([['j', 2],[1, 3]], 3))
Traceback (most recent call last):
	  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided([['j', 2],[1, 3]], ))
Traceback (most recent call last):
	  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> print(matrix_divided([[0, 2],[1, 3],[1]], 4))
Traceback (most recent call last):
	  ...
TypeError: Each row of the matrix must have the same size
>>> print(matrix_divided([[0, 2],[1, 3], (8,9)], 4))
Traceback (most recent call last):
	  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
